# Generated by Django 2.1.7 on 2019-05-24 15:16

import address.models
import compositefk.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import event.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('address', '0002_auto_20160213_1726'),
    ]

    operations = [
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Association',
                'verbose_name_plural': 'Associations',
            },
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Title of the event')),
                ('event_state', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Refused'), ('C', 'Canceled')], default='P', max_length=1, verbose_name='State of the event')),
                ('start', models.DateTimeField(verbose_name='Start date and time')),
                ('end', models.DateTimeField(verbose_name='End date and time')),
                ('premium_flag', models.BooleanField(default=False, verbose_name='Premium')),
                ('address_id', address.models.AddressField(on_delete=django.db.models.deletion.PROTECT, to='address.Address')),
                ('assos_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Association')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assos_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Association')),
            ],
            options={
                'verbose_name': 'Member of the Bureau',
                'verbose_name_plural': 'Members of the Bureau',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assos_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='event.Association')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
            },
        ),
        migrations.CreateModel(
            name='President',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assos_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='event.Association')),
                ('manager', compositefk.fields.CompositeOneToOneField(null_if_equal=[], on_delete=django.db.models.deletion.CASCADE, to='event.Manager', to_fields={'assos_id': compositefk.fields.LocalFieldValue('assos_id'), 'user': compositefk.fields.LocalFieldValue('user')})),
            ],
            options={
                'verbose_name': 'President',
                'verbose_name_plural': 'Presidents',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_type', models.CharField(choices=[('I', 'Internal'), ('E', 'External'), ('S', 'Staff')], max_length=1, verbose_name='Type of ticket')),
                ('price', models.PositiveIntegerField(validators=[event.models.validate_price_for_sqlite], verbose_name='Price')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Event')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.BooleanField(blank=True, null=True, verbose_name='Gender')),
                ('birth_date', models.DateField(blank=True, null=True, validators=[event.models.validate_birth], verbose_name='Birth Date')),
                ('address_id', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', to='address.Address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Event')),
            ],
            options={
                'verbose_name': 'Purchase',
                'verbose_name_plural': 'Purchases',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_type', models.CharField(choices=[('I', 'Internal'), ('E', 'External'), ('S', 'Staff')], max_length=1, verbose_name='Type of ticket')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Event')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.AddField(
            model_name='purchase',
            name='ticket_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Ticket'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Profile'),
        ),
        migrations.AddField(
            model_name='president',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Profile'),
        ),
        migrations.AddField(
            model_name='manager',
            name='member',
            field=compositefk.fields.CompositeOneToOneField(null_if_equal=[], on_delete=django.db.models.deletion.CASCADE, to='event.Member', to_fields={'assos_id': compositefk.fields.LocalFieldValue('assos_id'), 'user': compositefk.fields.LocalFieldValue('user')}),
        ),
        migrations.AddField(
            model_name='manager',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Profile'),
        ),
        migrations.AddField(
            model_name='event',
            name='manager_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='event.Manager'),
        ),
        migrations.AddField(
            model_name='emailaddress',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Profile'),
        ),
        migrations.AlterUniqueTogether(
            name='purchase',
            unique_together={('event_id', 'user', 'ticket_id')},
        ),
        migrations.AlterUniqueTogether(
            name='price',
            unique_together={('ticket_type', 'event_id')},
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('assos_id', 'user')},
        ),
    ]
